name: C++ CD
on:
  workflow_run:
    workflows: [cpp-ci-linux]
    types:
      - completed
    branches: [develop, main]
jobs:
  build_clang:
    runs-on: ubuntu-latest
    env:
      TAG: ${{ (github.ref == 'refs/heads/main' && 'prod') || (github.ref == 'refs/heads/develop' && 'dev') || 'testing' }}
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.workflow_run.head_branch }}
      - name: Pull && Build Docker Image
        run: |
          docker pull ${{ secrets.USERNAME }}/clang_cpp:$TAG
          docker build -f dockerfiles/clang.Dockerfile -t ${{ secrets.USERNAME }}/clang_cpp:$TAG .
      - name: Save Docker Image
        run: |
          docker save ${{ secrets.USERNAME }}/clang_cpp:$TAG  -o clang_cpp.tar
      - name: Upload Docker Image
        uses: actions/upload-artifact@v2
        with:
          name: clang_cpp
          path: clang_cpp.tar
  publish_clang:
    needs: build_clang
    runs-on: ubuntu-latest
    env:
      TAG: ${{ (github.ref == 'refs/heads/main' && 'prod') || (github.ref == 'refs/heads/develop' && 'dev') || 'testing' }}
    steps:
      - name: Login to DockerHub
        run: docker login -u ${{ secrets.USERNAME }} -p ${{ secrets.PASSWORD }}
      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: clang_cpp
          path: /tmp
      - name: Load Docker Image
        run: |
          echo $TAG
          docker load -i /tmp/clang_cpp.tar
      - name: Push Docker Image
        run: |
          docker push ${{ secrets.USERNAME }}/clang_cpp:$TAG
  build_gcc:
    runs-on: ubuntu-latest
    env:
      TAG: ${{ (github.ref == 'refs/heads/main' && 'prod') || (github.ref == 'refs/heads/develop' && 'dev') || 'testing' }}
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.workflow_run.head_branch }}
      - name: Pull && Build Docker Image
        run: |
          docker pull ${{ secrets.USERNAME }}/gcc_cpp:$TAG
          docker build -f dockerfiles/gcc_app.Dockerfile -t ${{ secrets.USERNAME }}/gcc_cpp:$TAG .
      - name: Save Docker Image
        run: |
          docker save ${{ secrets.USERNAME }}/gcc_cpp:$TAG  -o gcc_cpp.tar
      - name: Upload Docker Image
        uses: actions/upload-artifact@v2
        with:
          name: gcc_cpp
          path: gcc_cpp.tar
  publish_gcc:
    needs: build_gcc
    runs-on: ubuntu-latest
    env:
      TAG: ${{ (github.ref == 'refs/heads/main' && 'prod') || (github.ref == 'refs/heads/develop' && 'dev') || 'testing' }}
    steps:
      - name: Login to DockerHub
        run: docker login -u ${{ secrets.USERNAME }} -p ${{ secrets.PASSWORD }}
      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: gcc_cpp
          path: /tmp
      - name: Load Docker Image
        run: |
          echo $TAG
          docker load -i /tmp/gcc_cpp.tar
      - name: Push Docker Image
        run: |
          docker push ${{ secrets.USERNAME }}/gcc_cpp:$TAG
        
